@model MVCDiscografia.ViewModels.AlbumViewVM

@{
    ViewBag.Title = "Detalles del Album";
}

<h2>Detalles del Album</h2>

<div>
    <h4>Album</h4>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.losArtistas)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.losArtistas)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Album.Nombre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Album.Nombre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Album.FechaGrabacion)
        </dt>

        <dd>
            @{
                string fechaGrabacion = Model.Album.FechaGrabacion.Value.ToString("dd-MMM-yy");
                string fechaAdquisicion = Model.Album.FechaAdquisicion.Value.ToString("dd-MMM-yy");
            }
            @Html.DisplayFor(model => fechaGrabacion)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Album.FechaAdquisicion)
        </dt>

        <dd>
            @Html.DisplayFor(model => fechaAdquisicion)
        </dd>

        <dt>
            Formato
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Album.Formato.Descripcion)
        </dd>
        <br />
        <dt>
            Tracklist
        </dt>

        @{
            foreach (var c in Model.elTracklist)
            {
                <dd>
                    @Html.DisplayFor(p => c.posicion) -
                    @Html.DisplayFor(p => c.nombreCancion)
                </dd>
            }

            if (Model.Album.DiscogsReleaseCode != null && Model.datosDiscogs != null)
            {
                <br />
                <dt>
                    Cubierta
                </dt>

                <dd>
                    <img src="@Html.DisplayFor(model => model.datosDiscogs.coverUrl)" alt="Front Cover">
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.datosDiscogs.disquera)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.datosDiscogs.disquera)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.datosDiscogs.numCatalogo)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.datosDiscogs.numCatalogo)
                </dd>
            }

            <br />
            <dt>
                @Html.DisplayNameFor(model => model.Album.DiscogsReleaseCode)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Album.DiscogsReleaseCode)
            </dd>

            if (Model.Album.SpotifyID != null && Model.Album.SpotifyID.Length > 0)
            {
                string SpotifyURL = "https://open.spotify.com/embed/album/" + Model.Album.SpotifyID;
                <br />
                <dt>
                    @Html.DisplayNameFor(model => model.Album.SpotifyID)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Album.SpotifyID)
                </dd>

                <dd>
                    <!-- <iframe src="@SpotifyURL" width="300" height="300"
            frameborder="0" allowtransparency="true" allow="encrypted-media">
    </iframe> -->
                    <iframe style="border-radius:12px" src="@SpotifyURL" width="100%" height="352" 
                            frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; 
                            encrypted-media; fullscreen; picture-in-picture" loading="lazy">
                    </iframe>
                </dd>
                }
            }
    </dl>
</div>
<p>
    @Html.ActionLink("Editar", "Edit", new { id = Model.Album.AlbumID }) |
    @Html.ActionLink("Regresar al Indice", "Index")
</p>
